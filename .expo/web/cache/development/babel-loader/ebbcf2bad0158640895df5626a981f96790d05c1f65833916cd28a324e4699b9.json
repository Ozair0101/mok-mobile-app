{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport authReducer from \"./slices/authSlice\";\nimport cartReducer from \"./slices/cartSlice\";\nimport userReducer from \"./slices/userSlice\";\nvar persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  whitelist: ['auth', 'cart']\n};\nvar rootReducer = combineReducers({\n  auth: authReducer,\n  cart: cartReducer,\n  user: userReducer\n});\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nexport var store = configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n      }\n    });\n  }\n});\nexport var persistor = persistStore(store);","map":{"version":3,"names":["configureStore","persistStore","persistReducer","AsyncStorage","combineReducers","authReducer","cartReducer","userReducer","persistConfig","key","storage","whitelist","rootReducer","auth","cart","user","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Users/Mr Wiyar Ahmad Zai/Desktop/Project/Mobile App/mobile/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport authReducer from './slices/authSlice';\r\nimport cartReducer from './slices/cartSlice';\r\nimport userReducer from './slices/userSlice';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: AsyncStorage,\r\n  whitelist: ['auth', 'cart'], // Only persist these reducers\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  cart: cartReducer,\r\n  user: userReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,eAAe,QAAQ,kBAAkB;AAElD,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAElB,IAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAEP,YAAY;EACrBQ,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM;AAC5B,CAAC;AAED,IAAMC,WAAW,GAAGR,eAAe,CAAC;EAClCS,IAAI,EAAER,WAAW;EACjBS,IAAI,EAAER,WAAW;EACjBS,IAAI,EAAER;AACR,CAAC,CAAC;AAEF,IAAMS,gBAAgB,GAAGd,cAAc,CAACM,aAAa,EAAEI,WAAW,CAAC;AAEnE,OAAO,IAAMK,KAAK,GAAGjB,cAAc,CAAC;EAClCkB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAE,SAAZA,UAAUA,CAAGC,oBAAoB;IAAA,OAC/BA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;QACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;MACzD;IACF,CAAC,CAAC;EAAA;AACN,CAAC,CAAC;AAEF,OAAO,IAAMC,SAAS,GAAGtB,YAAY,CAACgB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}