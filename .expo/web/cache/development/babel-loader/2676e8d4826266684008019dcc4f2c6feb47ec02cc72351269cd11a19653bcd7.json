{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nvar mockLogin = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    yield new Promise(function (resolve) {\n      return setTimeout(resolve, 1000);\n    });\n    if (email === 'test@example.com' && password === 'password') {\n      return {\n        user: {\n          id: '1',\n          name: 'Test User',\n          email: 'test@example.com',\n          role: 'USER',\n          emailVerified: true,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        },\n        accessToken: 'mock-access-token',\n        refreshToken: 'mock-refresh-token'\n      };\n    }\n    throw new Error('Invalid credentials');\n  });\n  return function mockLogin(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar mockRegister = function () {\n  var _ref2 = _asyncToGenerator(function* (name, email, password) {\n    yield new Promise(function (resolve) {\n      return setTimeout(resolve, 1000);\n    });\n    return {\n      user: {\n        id: '1',\n        name: name,\n        email: email,\n        role: 'USER',\n        emailVerified: false,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      },\n      accessToken: 'mock-access-token',\n      refreshToken: 'mock-refresh-token'\n    };\n  });\n  return function mockRegister(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var loginUser = createAsyncThunk('auth/login', function () {\n  var _ref5 = _asyncToGenerator(function* (_ref3, _ref4) {\n    var email = _ref3.email,\n      password = _ref3.password;\n    var rejectWithValue = _ref4.rejectWithValue;\n    try {\n      return yield mockLogin(email, password);\n    } catch (error) {\n      return rejectWithValue(error.message || 'Login failed');\n    }\n  });\n  return function (_x6, _x7) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexport var registerUser = createAsyncThunk('auth/register', function () {\n  var _ref8 = _asyncToGenerator(function* (_ref6, _ref7) {\n    var name = _ref6.name,\n      email = _ref6.email,\n      password = _ref6.password;\n    var rejectWithValue = _ref7.rejectWithValue;\n    try {\n      return yield mockRegister(name, email, password);\n    } catch (error) {\n      return rejectWithValue(error.message || 'Registration failed');\n    }\n  });\n  return function (_x8, _x9) {\n    return _ref8.apply(this, arguments);\n  };\n}());\nexport var logoutUser = createAsyncThunk('auth/logout', _asyncToGenerator(function* () {\n  return null;\n}));\nvar initialState = {\n  isAuthenticated: false,\n  user: null,\n  accessToken: null,\n  refreshToken: null,\n  loading: false,\n  error: null\n};\nvar authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    clearError: function clearError(state) {\n      state.error = null;\n    },\n    updateUser: function updateUser(state, action) {\n      if (state.user) {\n        state.user = _objectSpread(_objectSpread({}, state.user), action.payload);\n      }\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(loginUser.pending, function (state) {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, function (state, action) {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n      state.error = null;\n    }).addCase(loginUser.rejected, function (state, action) {\n      state.loading = false;\n      state.error = action.payload || 'Login failed';\n    }).addCase(registerUser.pending, function (state) {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, function (state, action) {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n      state.error = null;\n    }).addCase(registerUser.rejected, function (state, action) {\n      state.loading = false;\n      state.error = action.payload || 'Registration failed';\n    }).addCase(logoutUser.fulfilled, function (state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.error = null;\n    });\n  }\n});\nvar _authSlice$actions = authSlice.actions,\n  clearError = _authSlice$actions.clearError,\n  updateUser = _authSlice$actions.updateUser;\nexport { clearError, updateUser };\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","mockLogin","_ref","_asyncToGenerator","email","password","Promise","resolve","setTimeout","user","id","name","role","emailVerified","createdAt","Date","toISOString","updatedAt","accessToken","refreshToken","Error","_x","_x2","apply","arguments","mockRegister","_ref2","_x3","_x4","_x5","loginUser","_ref5","_ref3","_ref4","rejectWithValue","error","message","_x6","_x7","registerUser","_ref8","_ref6","_ref7","_x8","_x9","logoutUser","initialState","isAuthenticated","loading","authSlice","reducers","clearError","state","updateUser","action","_objectSpread","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","_authSlice$actions","actions","reducer"],"sources":["C:/Users/Mr Wiyar Ahmad Zai/Desktop/Project/Mobile App/mobile/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AuthState, User } from '../types';\r\n\r\n// Mock API calls - will be replaced with actual API calls\r\nconst mockLogin = async (email: string, password: string) => {\r\n  // Simulate API call\r\n  await new Promise(resolve => setTimeout(resolve, 1000));\r\n  \r\n  if (email === 'test@example.com' && password === 'password') {\r\n    return {\r\n      user: {\r\n        id: '1',\r\n        name: 'Test User',\r\n        email: 'test@example.com',\r\n        role: 'USER' as const,\r\n        emailVerified: true,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      },\r\n      accessToken: 'mock-access-token',\r\n      refreshToken: 'mock-refresh-token',\r\n    };\r\n  }\r\n  throw new Error('Invalid credentials');\r\n};\r\n\r\nconst mockRegister = async (name: string, email: string, password: string) => {\r\n  // Simulate API call\r\n  await new Promise(resolve => setTimeout(resolve, 1000));\r\n  \r\n  return {\r\n    user: {\r\n      id: '1',\r\n      name,\r\n      email,\r\n      role: 'USER' as const,\r\n      emailVerified: false,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n    },\r\n    accessToken: 'mock-access-token',\r\n    refreshToken: 'mock-refresh-token',\r\n  };\r\n};\r\n\r\n// Async thunks\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/login',\r\n  async ({ email, password }: { email: string; password: string }, { rejectWithValue }) => {\r\n    try {\r\n      return await mockLogin(email, password);\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message || 'Login failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/register',\r\n  async ({ name, email, password }: { name: string; email: string; password: string }, { rejectWithValue }) => {\r\n    try {\r\n      return await mockRegister(name, email, password);\r\n    } catch (error: any) {\r\n      return rejectWithValue(error.message || 'Registration failed');\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk('auth/logout', async () => {\r\n  // Clear tokens, etc.\r\n  return null;\r\n});\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  accessToken: null,\r\n  refreshToken: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    updateUser: (state, action: PayloadAction<Partial<User>>) => {\r\n      if (state.user) {\r\n        state.user = { ...state.user, ...action.payload };\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.accessToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string || 'Login failed';\r\n      })\r\n      // Register\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload.user;\r\n        state.accessToken = action.payload.accessToken;\r\n        state.refreshToken = action.payload.refreshToken;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload as string || 'Registration failed';\r\n      })\r\n      // Logout\r\n      .addCase(logoutUser.fulfilled, (state) => {\r\n        state.isAuthenticated = false;\r\n        state.user = null;\r\n        state.accessToken = null;\r\n        state.refreshToken = null;\r\n        state.error = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, updateUser } = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}